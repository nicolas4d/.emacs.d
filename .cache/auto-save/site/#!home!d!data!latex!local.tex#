% local.tex -- released 27 October 1986
%   for LaTeX version 2.09
%
% This file is used to produce a Local Guide for LaTeX users containing
% information specific to a site plus errors and omissions from the LaTeX
% manual (published by Addison-Wesley).
%
% The installer of LaTeX at a site is responsible for customizing this
% document and providing copies for users.  He will have to read the
% text of this file CAREFULLY to see what must be added, removed, and
% changed.  

% The \contact command is defined to generate the name of the person to
% whom questions should be sent.  This should be someone at the site.
% Most users' questions are easily answered by anyone slightly familiar
% with LaTeX or TeX. Don't bother anyone at another site with questions
% that can be answered locally.

\input{psfig}

\documentstyle[titlepage,fullpage]{article}

\newcommand{\contact}{Rama Porrat tel. 58-4539}

\newcommand{\BibTeX}{{\rm B\kern-.05em{\sc i\kern-.025em b}\kern-.08em
    T\kern-.1667em\lower.7ex\hbox{E}\kern-.125emX}}

\newcommand{\SLiTeX}{{\rm S\kern-.06em{\sc l\kern-.035emi}\kern-.06em T\kern
   -.1667em\lower.7ex\hbox{E}\kern-.125emX}}

\newcommand{\PS}{{\sc Post\-Script} }

\newcommand\bs{\char '134 }  % A backslash character for \tt font

\newcommand\HU{Hebrew University}

\title{Local Guide to \LaTeX\ at \HU}

\author{Leslie Lamport\\revised by Shmuel Browns\\customized by Rama Porrat}

\date{3 July 1990\\  % keep this date current, kludge to include next line
For \LaTeX\ Version 2.09}

\begin{document}

\maketitle

\tableofcontents

\newpage

\section{Introduction}

One of the advantages of using \LaTeX\ is that it is available on
different makes of computers at many sites.  This
document tells you how to run \LaTeX\ under Unix
\footnote{Unix is a trademark of Bell Labs.} on
Shum (a Solbourne 5/600) at \HU.
It does not describe \LaTeX\ in detail--the complete reference is
the manual, \LaTeX: {\em A Document Preparation System} by Leslie Lamport,
published by Addison-Wesley (ISBN\ 0-201-15790-X).

If you have a question that you can't answer by reading the manual and
this document, ask someone that is using \LaTeX; if that does not help try
a local Unix wizard.


\section{Getting Started}

\subsection{Running a Sample File} \label{sec-sample}

Before preparing your own documents, you may want to get acquainted
with \LaTeX\ by running it on a sample input file.  There is one available for
copying from {\tt /usr/local/tex/inputs} called {\tt sample.tex}.  Note that \LaTeX\
likes its files to end with the extension {\tt tex}--this is only meaningful
to \LaTeX\ and has no significance to Unix.
Copy the file \mbox{\tt sample.tex} to your current directory.

Printing a prepared \LaTeX\ file is a two-step process.
First, run \LaTeX\ on the input file in the current directory,
in our example \mbox{\tt sample.tex},
by typing:
\begin{verbatim}
     latex sample
\end{verbatim}
\LaTeX\ creates a {\tt dvi} (device-independent) file, called \mbox{\tt
sample.dvi} in your directory.  It also will create a {\tt log} file and some
other work files.  You then run {\tt dvips}
which generates a \PS\ file which can be saved and printed later
\begin{verbatim}
     dvips sample > sample.ps
     lpr -Plw1 sample.ps
\end{verbatim}
or piped directly to the print spooler.
\begin{verbatim}
     dvips sample | lpr -Plw1
\end{verbatim}
In the above examples the files are printed to the laser printer
located in the Ross building next to the computer room (Room \#112).
Here is a list of available laser printers, with their
names and locations.
To select one you have to type 
{\tt lw{\em n}} to the {\tt-P} option of the {\tt lpr} command,
where {\em n} is one of the numbers below:
\begin{verbatim}
     lw1    Computer Science, Ross, first floor.
     lw2    Mathematics, Einstein.
     lw3    Makbilan Lab, Ross.
     lw4    Computer Science, Ross.
     lw5    Computer Center, Taylor.
\end{verbatim}

A handy option when printing is to use the {\tt -p num} (num stands for the first page printed) and 
{\tt -n num} (num pages will be printed)
options to {\tt dvips} to print a subset of pages, e.g.
\begin{verbatim}
     dvips -p7 -n1 > page7
\end{verbatim}
to prepare only page 7 for printing.  Note that the title page is page zero and
the table of contents is page one.

After your output has been printed, you should remove the \mbox{\tt
sample.dvi}, \mbox{\tt sample.log} and \mbox{\tt sample.aux} files.

\subsection{Preparing Your Own Files and Running \LaTeX}

The first step is to prepare an input file containing your text
and \LaTeX\ commands
that describe the document structure using the text editor of your choice.
Both {\tt vi} and {\tt emacs} are available; a plus to choosing {\tt emacs}
is that there is a \LaTeX\ mode that makes it easier
to prepare \LaTeX\ input files.  As a starting point you can copy
the file \mbox{\tt small.tex} which contains the basic blocks of a \LaTeX\
document from {\tt /usr/local/tex/inputs} and edit that.

After you have prepared your input file, whose name should have the extension
{\tt tex}, you should follow the two-step
instructions in Section~\ref{sec-sample}, substituting
the name of your file wherever you see ``\mbox{\tt sample}'' and your printer for
``\mbox{\tt lw1}''.  You can remove the
{\tt dvi}, {\tt aux} and {\tt log}  files after printing to
save disk space.

In the above examples we specified a simple filename rather than a full 
pathname.  This was sufficient because
\begin{enumerate}
 \item We ran \LaTeX\ from the directory containing the root file, i.e. our
input file.
 \item We assumed that all files specified by \hbox{\verb|\input|} and 
      \hbox{\verb|\include|} commands were in the same directory as the root
       file.
\end{enumerate}
In general, if your files are somewhere else you will have to specify full
pathnames so that \LaTeX\ can find them.  When running
\LaTeX\ on someone else's file, copy the file to your directory and run \LaTeX\
from there so that you have write permission.  When you want to include a file
from another directory in an
\hbox{\verb|\input|} or \hbox{\verb|\include|} command, you must use a
complete path name.  For example, to include the file \mbox{\tt hisfile.tex} 
from Jones' directory \hbox{\verb|/foo/bar|}, you can type
\begin{verbatim}
     \include{/udir/jones/foo/bar/hisfile}
\end{verbatim}
Note that a \verb|~| character may not appear in the argument of an
\hbox{\verb|\input|} or \hbox{\verb|\include|} command, so you {\em
can't\/} use a file name such as \hbox{\verb|~jones/foo/bar/hisfile|}.

For users who really want to know, here is how \LaTeX\ finds its
files.  The root file is found by Unix according to its usual rules.
\LaTeX's auxiliary files are read and written in the directory from
which it is run.  All file names specified in the \LaTeX\ input,
including the names of document-style ({\tt sty}) files specified by
the \hbox{\verb|\documentstyle|} command, are interpreted relative to
the directory from which \LaTeX\ is run.  If \LaTeX\ does not find a


file starting in this directory, it looks in the system directory
\hbox{\verb|/usr/local/tex/inputs|}. if it doesn't find the file
there, it looks in the system directory
\hbox{\verb|/usr/local/tex/macros|}. You can change the directories in
which \LaTeX\ looks for its input files by setting the environment
variable \mbox{\tt TEXINPUTS}.  Putting the command
\begin{verbatim}
     setenv TEXINPUTS :.:/udir/jones/myown:/usr/local/tex/macros:
\end{verbatim}
in your \mbox{\tt .login} file causes \LaTeX\ to look for files first
in the current directory, then in Jones' {\tt /myown} directory, and
then in the system directory.  You might want to do this if your name
is Jones and you have your own personal document-style files in your
{\tt /myown} directory. 

\subsection{Quitting \LaTeX\ on Errors}

If you want to stop \LaTeX\ in the middle of its execution, perhaps
because it is printing a seemingly unending string of uninformative
error messages, type {\em Control-C\/} (press $C$ while holding down
the key labeled {\em CTRL\/}).  This will make \LaTeX\ stop as if it
had encountered an ordinary error, and you can return to Unix command
level by typing {\tt X}, as described in the manual.

Note that if an error forces
you to stop \LaTeX\ prematurely (by typing {\em Control-C\/} or {\em
Control-Z\/}), then the files that \LaTeX\ was writing are incomplete,
and the previous complete versions have been destroyed (because of the way
Unix handles files.  You probably
don't care about the output on the {\tt dvi} file, but, if you are
making a table of contents or using cross-referencing commands, then
\LaTeX\ also writes one or more {\em auxiliary files\/} that it reads
the next time it processes the same input file.  If the auxiliary files
are incomplete because \LaTeX\ was stopped before reaching the end of
its input file, then the table of contents and cross-references will be
incorrect the next time \LaTeX\ is run on the same input file.  You
will have to run \LaTeX\ a second time to get them right.  If you want
to avoid having to run \LaTeX\ twice after making an error---for
example, if your input is very long---then you should save copies of
these auxiliary files before running \LaTeX. An input file named
\mbox{\tt myfile.tex} and all the auxiliary files produced by \LaTeX\
from it are included in the Unix file specifier \mbox{\tt myfile.*}.

%List the text editors, available, and any special features they have
%for producing \LaTeX\ input.  Explain how the various text editors
%could cause bad characters to appear in the input file that would
%generate the
%\begin{verbatim}
%! Text line contains an invalid character.
%\end{verbatim}
%error.

\section{Carrying On}

\subsection{Document Styles}

The standard document styles in \LaTeX\ are:
\begin{itemize}
\item \mbox{\tt article~~~~~~} Described in \LaTeX\  manual.
\item \mbox{\tt siam~~~~~~~~~} Used for articles in SIAM journals.
   Details in {\tt /usr/local/tex/inputs/siam}.
\item \mbox{\tt report~~~~~~~} Described in  \LaTeX\  manual.
\item \mbox{\tt amsabstract~~} Use for preparation of AMS abstract.
   Details in {\tt /usr/local/tex/inputs/ams}.
\item \mbox{\tt book~~~~~~~~~} Described in \LaTeX\  manual.
\item \mbox{\tt letter~~~~~~~} Described in LaTeX\  manual.
\item \mbox{\tt HUletter~~~~~}  A customized letter in English. See below.
\item \mbox{\tt HUhebletter~~} A customized letter in Hebrew. See below.
\end{itemize}



You choose the style you want with the command
\begin{verbatim}
     \documentstyle[options]{style}
\end{verbatim}

\subsection{HUletter and HUhebletter Styles--Letters on HU Letterhead}

There are local document styles for producing a letter on
\HU\ letterhead; 
the \mbox{\tt HUletter} style for an English letter, and
the \mbox{\tt HUhebletter} style for an Hebrew letter.
Here are examples of the usage:
\begin{verbatim}
     \documentstyle[times,fullpage]{HUletter}
\end{verbatim}
where {\tt times} and {\tt fullpage} are options that request that the letter
be output in Times Roman rather than the CMR font (see Section~\ref{sec-Times}
for more details) and fill more of the page.
\begin{verbatim}
     \documentstyle[hebrew,fullpage]{HUhebletter}
\end{verbatim}
where {\tt hebrew} and {\tt fullpage} are options.
See below the explanation of the hebrew option.

In order to activate the HU letter styles,
you should have in your working directory
a file called .personal.ps, containing personal information.
Here is an example of the content of this file:

\begin{verbatim}
/@@Name (Simon Shickman) def
/@@Title (Head of Programming Services) def
/@@Htitle (mipzipkez zeev y`x) def
/@@Hname (onwiy oeniiq) def
/@@Email (simon@hujivms.bitnet) def
/@@Ext (4279) def
/@@Fax {527349) def
\end{verbatim}

The lines starting with /@@Htitle and /@@Hname contain information in 
Hebrew, written backwards.

\subsection{Style Options}

There are five style options:
\begin {itemize}
\item \mbox{\tt proc} option for making camera-ready copy for conference
 proceedings,
\item the {\tt bezier} option for drawing curves,
\item the {\tt ifthen} option for implementing
{\bf if-then-else} and {\bf while-do} control structures,
\item the {\tt showidx} option for printing index entries in the margin,
and
\item the {\tt hebrew} option for writing in Hebrew.
\item the {\tt times} option to use Times Roman fonts. Other Postscript
  fonts are also available as options. See below.
\end {itemize}

\subsubsection{The {\tt proc} Style Option}

The {\tt proc} option is used with the \mbox{\tt article} document
style.  It produces two-column output for ACM and IEEE conference
proceedings.  The command \hbox{\verb|\copyrightspace|} makes the blank
space at the bottom of the first column of the first page, where the
proceedings editor will insert a copyright notice.  This command works
by producing a blank footnote, so it is placed in the text of the first
column.  It must go after any \hbox{\verb|\footnote|} command that
generates a footnote in that column.

\LaTeX\ automatically numbers the output pages.  It's a good idea 
to identify the paper on each page of output.  Placing the command
\begin{verbatim}
     \markright{Jones---Foo}
\end{verbatim}
in the preamble (before the \hbox{\verb|\begin{document}|} command)
prints ``Jones---Foo'' at the bottom of each page.  

\subsubsection{The {\tt bezier} Style Option}

This option defines a single command, \hbox{\verb|\bezier|}, that draws
a curved line in a {\tt picture} environment.  Let $P_{i}$ be the point
with coordinates $(x_{i},y_{i})$, for $i=1$, 2, and 3.  The command
\begin{itemize} \tt
\item[]
\verb|\bezier{|$n$\verb|}(|$x_{1}$,$y_{1}$)($x_{2}$,$y_{2}$)($x_{3}$,$y_{3}$)
\end{itemize}
draws $n$ points on the quadratic Bezier spline determined by the three
points $P_{1}$, $P_{2}$, and $P_{3}$.  The locus of points on this
spline is a parabolic arc from $P_{1}$ to $P_{3}$ having the line
$P_{1}P_{2}$ tangent to it at $P_{1}$ and the line $P_{2}P_{3}$ tangent
to it at $P_{3}$.  Note that $P_{2}$ is {\em not\/} on this arc unless
$P_{1}$, $P_{2}$, and $P_{3}$ are colinear, in which case the arc is a
straight line.  Bezier splines are useful because it's easy to join two
of them together smoothly by giving them the same tangent line where
they meet.

It takes roughly 75 points per inch to form a solid line, depending
upon the line thickness.  See Section~C.13.3 of the \LaTeX\ manual for commands
to specify line thickness in a {\tt picture} environment.  This command
is {\em very\/} slow, and \TeX\ has enough memory to hold only about
1000 points plus a page of text.  (Remember that \TeX\ keeps the
current page plus all as yet unprinted figures in memory.) So, the
\verb|bezier| command should be used for only a small number of small
curves.


\subsubsection{The {\tt ifthen} Style Option}

This option provides two programming language features that are useful
only for people who already know how to program.  It defines the
two commands
\begin{itemize} 
\item[]
\verb|\ifthenelse{|{\em test\/}\verb|}{|{\em then clause\/}\verb|}{|%
{\em else clause\/}\verb|}|\\
\verb|\whiledo{|{\em test\/}\verb|}{|{\em do clause\/}\verb|}|
\end{itemize}
that implement the following two Pascal language structures
\begin{itemize}
\item[]
\begin{tabbing}
{\bf if} {\em test\/} \= {\bf then} \= {\em then clause\/} \\
 \> {\bf else} \> {\em else clause\/} \\[2pt]
{\bf while} {\em test\/} {\bf do} {\em do clause\/}
\end{tabbing}
\end{itemize}
The {\em then\/}, {\em else\/}, and {\em do\/} clauses
are ordinary \LaTeX\ input; {\em test\/} is one of the following:
\begin{itemize}
 \item A relation between two numbers formed with {\tt <}, {\tt >},
or {\tt =}; for example, \hbox{\verb|\value{page}>3|}.
 \item \verb|\equal{|{\em string1\/}\verb|}{|%
{\em string2\/}\verb|}|, which evaluates to {\em true\/} if {\em
string1\/} and {\em string2\/} are the same strings of characters after
all commands have been replaced by their definitions.  (Upper- and
lowercase letters are unequal.)
 \item A logical combination of the above two kinds of tests
    using the operators \hbox{\verb|\or|}, \hbox{\verb|\and|},
    and \hbox{\verb|\not|} and the parentheses \hbox{\verb|\(|}
    and \hbox{\verb|\)|}---for example:
\begin{verbatim}
\not \( \value{section} = 1  \and  \equal{Jones}{\myname} \)
\end{verbatim}
\end{itemize}
The {\em test\/} argument is a violently moving argument, which means
that not only fragile commands but even some commands that are not
normally fragile will break, causing \TeX\ to enter an infinite loop.
The \verb|\protect| command works in these situations.

These commands, together with \hbox{\verb|\renewcommand|} and the
commands of Section~C.7.4 for manipulating counters, open up a whole
new world of hacking.

\subsubsection{The {\tt showidx} Style Option}

This style option, for use with the {\tt report} or {\tt book} document
styles, causes index entries to be printed in the outer margin.  It
does not change the effect of the \verb|\makeindex|, which controls
whether or not an {\tt .idx} file is written.  No attempt is made to
avoid overprinting marginal notes.  This option issues a 
\verb|\flushbottom| declaration.


%To use the {\em spell\/} program for finding spelling errors in a
%\LaTeX\ input file named \mbox{\tt myfile.tex}, type the following
%command:
%\begin{verbatim}
%     delatex myfile.tex | spell
%\end{verbatim}
%This will type a list of possibly misspelled words on your terminal.
%If you'd rather have the output written to a file named \mbox{\tt
%foo.bar}, type
%\begin{verbatim}
%     delatex myfile.tex | spell >foo.bar
%\end{verbatim}

\subsubsection{The {\tt hebrew} Style Option}

This option provides the possibility to write Hebrew documents
in Latex. In can be used with all document styles. However, this
option is still being worked upon, and problems are expected to
occur and be dealt with. Send all requests pertaining to this option
to
\begin{verbatim}
  rama@shum.huji.ac.il
\end{verbatim}

While using this option, make use of the following control sequences:
\begin{itemize}
\item {\tt $\backslash$sethebrew} to start Hebrew text.
\item {\tt $\backslash$unsethebrew} to start English text.
\item {\tt $\backslash$L\{.....\}} to write an English string within  Hebrew text.
\item {\tt $\backslash$R\{.....\}} to write a Hebrew string within English text.
\end{itemize}

The available Hebrew fonts are called Jerusalem, TelAviv,
OldJaffa, DeadSea. Those fonts resemble a 10 point font  in size.
They can be scaled by the regular $\backslash$magsteps'.
Other available Hebrew fonts are redis8, 9, 10, 12, 17 and
rediss8, 9, 10, 12.

the {\tt hebrew} style uses Jerusalem by default. You can
change this default by customizing the file hebrew.sty. Consult
section 2.2 in this guide as to where are the sty files.

To print a table containing any font's characters, run the
following \TeX commands:

$\backslash$input fonttable

$\backslash$table\{fontname\}

where 'fontname' is the name of the required font.

NOTE: The Hebrew date can be displayed using $\backslash$hebday.

\subsubsection{The {\tt times} Style Option} \label{sec-Times}

The {\tt times} option can be used to get the Times Roman font rather than the
font normally used by \LaTeX\, the Computer Modern Roman (CMR)
font family designed by Donald Knuth.  The choice of font is a personal 
preference, but Times Roman will print faster since it is already resident in
the Laser printers (see section~\ref{sec-LWfonts} for how to specify other
LaserWriter fonts).

The {\tt times} option uses Times Roman font for text, and CMR
fonts for math mode. The {\tt timesmath} options uses Times Roman 
fonts for both text and math mode.

%\TeX\ can use only the CMR fonts in math mode, so \verb|${\rm foo}=3$|
%produces ``foo'' in CMR font, which is probably not what you want.
%Instead, use \verb|$\mbox{\rm foo}=3$|, which typesets ``foo'' in Times
%Roman because \TeX\ is not in math mode inside the \verb|\mbox|.  No
%one will notice that ordinary math symbols like $\alpha$ or $x$ are
%typeset in a CMR font rather than a Times Roman font.

\subsection{Specifying Fonts}

Almost all the symbols available on our fonts can be generated by
ordinary \LaTeX\ commands.  However, there are type sizes not
obtainable by \LaTeX's size-changing commands with the ordinary
document styles.  Consult a local \TeX\ expert to find the
\TeX\ name for such a font.

Tables~\ref{tab:styles} and \ref{tab:fonts} allow you
to determine if the font for a type style at a particular
size is preloaded, loaded on demand, or unavailable.
\begin{table}
\centering
\begin{tabular}{l|r|r|r|}
\multicolumn{1}{l}{size} & 
\multicolumn{1}{c}{default (10pt)} &
        \multicolumn{1}{c}{11pt option}  &
        \multicolumn{1}{c}{12pt option}\\
\cline{2-4}
\verb|\tiny|       & 5pt  & 6pt & 6pt\\
\cline{2-4}
\verb|\scriptsize| & 7pt  & 8pt & 8pt\\
\cline{2-4}
\verb|\normalsize| & 10pt & 11pt & 12pt \\
\cline{2-4}
\verb|\large|      & 12pt & 12pt & 14pt \\
\cline{2-4}
\verb|\Large|      & 14pt & 14pt & 17pt \\
\cline{2-4}
\verb|\LARGE|      & 17pt & 17pt & 20pt\\
\cline{2-4}
\verb|\huge|       & 20pt & 20pt & 25pt\\
\cline{2-4}
\verb|\Huge|       & 25pt & 25pt & 25pt\\
\cline{2-4}
\end{tabular}
\caption{Type sizes for \LaTeX\ size-changing commands.}\label{tab:styles}
\end{table}
\begin{table}
\centering
\begin{tabular}{l|c|c|c|c|c|c|}
\multicolumn{1}{l}{}& 
\multicolumn{1}{c}{\tt \bs it} &
\multicolumn{1}{c}{\tt \bs bf} &
\multicolumn{1}{c}{\tt \bs sl} &
\multicolumn{1}{c}{\tt \bs sf} &
\multicolumn{1}{c}{\tt \bs sc} &
\multicolumn{1}{c}{\tt \bs tt} \\
\cline{2-7}
5pt  & D & D & X & X & X & X \\
\cline{2-7}
6pt  & X & D & X & X & X & X \\
\cline{2-7}
7pt  & P & D & X & X & X & X \\
\cline{2-7}
8pt  & P & D & D & D & D & D \\
\cline{2-7}
9pt  & P & P & D & D & D & P \\
\cline{2-7}
10pt & P & P & P & P & D & P \\
\cline{2-7}
11pt & P & P & P & P & D & P \\
\cline{2-7}
12pt & P & P & P & P & D & P \\
\cline{2-7}
14pt & D & P & D & D & D & D \\
\cline{2-7}
17pt & D & P & D & D & D & D \\
\cline{2-7}
20pt & D & D & D & D & D & D \\
\cline{2-7}
25pt & X & D & X & X & X & X \\
\cline{2-7}
\end{tabular}
\caption{Font classes: P = preloaded, D = loaded on demand, 
         X = unavailable.}\label{tab:fonts}
\end{table}
Table~\ref{tab:styles} tells you what size of type is used for each
\LaTeX\ type-size command in the various document-style options.  For
example, with the {\tt 12pt} option, the \hbox{\verb|\large|}
declaration causes \LaTeX\ to use 14pt type.  Table~\ref{tab:fonts}
tells, for every type size, to which class of fonts each type style
belongs.  For example, in 14pt type, \verb|\bf| uses a preloaded
font and the other five type-style commands use load-on-demand fonts.
Roman (\verb|\rm|) and math italic (\verb|\mit|) fonts are all
preloaded; the \hbox{\verb|\em|} declaration uses either italic
(\verb|\it|) or roman.

%Describe any special fonts available here.

\subsubsection{Specifying LaserWriter Resident Fonts} \label{sec-LWfonts}

The Apple LaserWriter comes with the following built-in font families: Times
Roman, Helvetica, Courier, Symbol, ITC Avant Garde, ITC Bookman, New Century
Schoolbook, New Helvetica Narrow, Palatino, ITC Zapf Chancery and ITC Zapf
Dingbats.  Using these fonts rather than bitmap fonts that have to be
downloaded to the printer with your file can save quite a bit of time and
space and hence speed up printing for everyone.  Consequently, you are 
strongly advised to use the times option (see section \ref{sec-Times})
at least for all but your final output.

The following fonts can also be specified as options to the {\tt documentstyle}
command:
\begin{verbatim}
     avantegarde
     bookman
     chancery
     ncs
     palatino
     times
     timesmath
\end{verbatim}
to give you the corresponding built-in LaserWriter fonts.  For example, to
print a document in ITC Avant Garde use the command:
\begin{verbatim}
     \documentstyle[avantegarde]{article}
\end{verbatim}

%Tell where to find a font manual, listing the character numbers of
%the symbols on different fonts.

%Include a table telling which fonts are preloaded, loaded on demand,
%and unavailable.  
\subsection{Where the Files Are}

% must explain where the following files are:
%   small.tex, sample.tex, *.sty, *.doc, lablst.tex, idx.tex
%

All \LaTeX\ files mentioned in the manual, including the {\tt sty} 
files, can be found in the directory \mbox{\tt /usr/local/tex/macros}
or in \mbox{\tt /usr/local/tex/inputs}.

%\subsection{Running {\tt lablst.tex} and {\tt idx.tex}}
%
%A list of labels and citations in an input file is printed
%by running \LaTeX\ on the input file \mbox{\tt lablst.tex},
%which is done by typing
%\begin{verbatim}
%     latex /usr/local/tex/lablst
%\end{verbatim}
%\LaTeX\ will then ask for the name of the input file, which should be
%typed without an extension, and for the name of the main document style
%(e.g., \mbox{\tt article}), used by that file.
%
%The index entries on an {\tt idx} file are printed by running \LaTeX\
%on the file \mbox{\tt idx.tex}, which is done by typing
%\begin{verbatim}
%     latex /usr/local/local/tex82/idx
%\end{verbatim}
%\LaTeX\ will ask for the name of the {\tt idx} file, which is typed
%without an extension.
%
%

\subsection{Differences from the Manual}

Most \LaTeX\ features described in the manual are provided by 
the implementation at \HU.
Currently, \SLiTeX\ is not supported. \BibTeX\ is available, as is Psfig/\TeX.

%Explain here any characters that can appear in input files other than
%the ones listed in Section 2.1.

%Tell if the \mbox{\tt log} file has an extension other than
%\mbox{\tt .log}.  Note: on TOPS-20, its extension is \mbox{\tt .lst}.

%Describe the sizes of disks and circles the are available.

%Don't forget to mention if the invisible fonts needed for \SLiTeX\
%color slides are unavailable.

\subsection{Special Versions}

Hebrew is available as an option. See above.

\subsection{Using \BibTeX}

\BibTeX\ is a program for compiling a reference list for a document
from a bibliographic database.  It is run by typing
\begin{verbatim}
     bibtex myfile
\end{verbatim}
where \mbox{\tt myfile.tex} is the name of your \LaTeX\ input file.
This reads the file \mbox{\tt myfile.aux}, which was generated when you
ran \LaTeX\ on \mbox{\tt myfile.tex}, and produces the file \mbox{\tt
myfile.bbl}.  \BibTeX\ should be run from the directory containing
\mbox{\tt myfile.tex} (which should be the same directory from which
\LaTeX\ was run on that file).

If the {\tt bib} file is not in the same directory as the \LaTeX\ input
file---for example, if you're using someone else's {\tt bib}
file---then you must include a path as part of the file name specified
by the \hbox{\verb|\bibliography|} command.  A \verb|~| cannot appear
in the argument of a \hbox{\verb|\bibliography|} command, so you should
use a complete path name.  For example, the \LaTeX\ command
\begin{verbatim}
     \bibliography{/udir/jones/bibfiles/gnus}
\end{verbatim}
specifies the file \mbox{\tt gnus.bib} kept by Jones in his 
\mbox{\tt /bibfiles} directory.


There is currently no formal provision for sharing bibliographic database
information, nor are there programs to assist in making your own {\tt
bib} files.  Suggestions for forming one or more common {\tt bib} files
are welcome.

In addition to the bibliography styles described in the manual, there
is a {\tt ieeetr} style that formats entries in the style of the IEEE
transactions.

In addition to the usual three-letter abbreviations for the months, the
following abbreviations are defined by the bibliography styles:
\begin{list}{}{\labelwidth 0pt \itemindent-.5\leftmargin
       \itemsep=2pt plus 1pt
       \let\makelabel\descriptionlabel}\it
\item[\tt acmcs] ACM Computing Surveys
\item[\tt acta] Acta Informatica
\item[\tt cacm] Communications of the ACM
\item[\tt ibmjrd] IBM Journal of Research and Development
\item[\tt ibmsj] IBM Systems Journal
\item[\tt ieeese] IEEE Transactions on Software Engineering
\item[\tt ieeetc] IEEE Transactions on Computers
\item[\tt ieeetcad]
 IEEE Transactions on Computer-Aided Design of Integrated Circuits
\item[\tt ipl] Information Processing Letters
\item[\tt jacm] Journal of the ACM
\item[\tt jcss] Journal of Computer and System Sciences
\item[\tt scp] Science of Computer Programming
\item[\tt sicomp] SIAM Journal on Computing
\item[\tt tocs] ACM Transactions on Computer Systems
\item[\tt tods] ACM Transactions on Database Systems
\item[\tt tog] ACM Transactions on Graphics
\item[\tt toms] ACM Transactions on Mathematical Software
\item[\tt toois] ACM Transactions on Office Information Systems
\item[\tt toplas] ACM Transactions on Programming Languages and Systems
\item[\tt tcs] Theoretical Computer Science
\end{list}

% Note: All styles should share the same set of abbreviations.

\subsection{Using Psfig}

Psfig/\TeX\ is a macro package for \LaTeX\ that lets you include arbitrary
\PS\ figures, drawings, charts, etc.
or custom symbols such as
`\psfig{figure=/usr/local/tex/figs/cm.ps,height=8pt,silent=}'
or
`\psfig{figure=/usr/local/tex/figs/pretzel.ps,height=8pt,silent=}'
into your document.
You tell \LaTeX\
about the macros by adding the line
\begin{verbatim}
     \input{psfig}
\end{verbatim}
at the beginning of your document. When you want to insert the figure i.e. the
file containing the \PS\ figure, you invoke the macro with
\begin{verbatim}
     \psfig{figure=anyfile.ps}
\end{verbatim}
Here is an example of inserting a piechart as a figure using the
command
\begin{verbatim}
     \par
     \centerline{\psfig{figure=/usr/local/tex/figs/piechart.ps,height=2.5in}}
     \par
\end{verbatim}
In this example, the piechart exists as a PS file in the \TeX\
directory {\tt /usr/local/tex/figs}.
\par
\centerline{\psfig{figure=/usr/local/tex/figs/piechart.ps,height=2.5in}}
\par
See the Psfig/\TeX\ User Guide for more complete details.


\subsection{Using Gnuplot}

Gnuplot is a program for doing plots. It can plot functions
as well as data files. Gnuplot can be used interactively;
It can also read its commands from a file, and create an output
file containing \LaTeX\ plot commands. This file can later
be inputted into a \LaTeX\ file, so that the plot becomes
part of the document.

To create a plot with Gnuplot and include it in a \LaTeX\
document, you create a file containing Gnuplot commands,
starting the file with
\begin{verbatim}
     set terminal latex
     set output "filename.tex"
\end{verbatim}
\bigskip
If this file is called gnu.com, you run                                 
\begin{verbatim}
     gnuplot gnu.com
\end{verbatim}
\bigskip
Then you can process the \LaTeX\ document which 
may include the commands
\medskip
\begin{verbatim}
      \begin{center}
        \begin{figure}
          \input{filename}
        \end{figure}
      \end{center}
\end{verbatim}

For more details on Gnuplot, its usage and commands, type
\begin{verbatim}
      latex gnuplot_guide
\end{verbatim}




\subsection{Available guides}

The currently available guides in latex are

sample

local

gnuplot\_guide

siam\_guide

amsabstract\_guide

\bigskip\noindent
For example, to get the guide you are now reading, type
\indent
latex local
\end{document}

%&c&@i*\hbox{* 2@s\|\ @i|}|#&
%&i&\index{#}&
%&m&\mbox#&
%&t&{\tt #}&
%&v&\hbox{\verb|#|}&
%&b&\verb|#|&
%&h&\hbox#&

