;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1366) (pixel-height . 727) (total-width . 171) (total-height . 43) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 1) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1366) (pixel-height . 727) (total-width . 171) (total-height . 43) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 1) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1))) "")))) t nil nil) (def-persp "E" ((def-buffer "defcustom.el" "/home/d/data/Emacs/Info(C-h i)/Emacs Lisp Intro/example/defcustom.el" emacs-lisp-mode) (def-buffer "FAQ.org" "/home/d/.emacs.d/doc/FAQ.org" org-mode) (def-buffer "recursive-graph-body-print-internal.el" "/home/d/data/Emacs/Info(C-h i)/Emacs Lisp Intro/example/recursive-graph-body-print-internal.el" emacs-lisp-mode) (def-buffer "graph-body-print.el" "/home/d/data/Emacs/Info(C-h i)/Emacs Lisp Intro/example/graph-body-print.el" emacs-lisp-mode) (def-buffer "columns-of-a-graph.el" "/home/d/data/Emacs/Info(C-h i)/Emacs Lisp Intro/example/columns-of-a-graph.el" emacs-lisp-mode) (def-buffer "top-of-ranges.el" "/home/d/data/Emacs/Info(C-h i)/Emacs Lisp Intro/example/top-of-ranges.el" emacs-lisp-mode) (def-buffer "Elisp.org" nil org-mode) (def-buffer "init.el" "/home/d/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "note.org" "/home/d/data/Emacs/Info(C-h i)/Emacs Lisp Intro/note.org" org-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 4) (min-width-ignore . 12) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 160) (min-pixel-height-ignore . 68) (min-pixel-width-ignore . 96) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 1366) (pixel-height . 727) (total-width . 171) (total-height . 43) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 686) (pixel-height . 727) (total-width . 86) (total-height . 43) (normal-height . 1.0) (normal-width . 0.5) (buffer "note.org" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 21817) (start . 15048))) (leaf (last . t) (pixel-width . 680) (pixel-height . 727) (total-width . 85) (total-height . 43) (normal-height . 1.0) (normal-width . 0.5) (buffer "*info*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 547279) (start . 546924))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 2) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1366) (pixel-height . 727) (total-width . 171) (total-height . 43) (normal-height . 1.0) (normal-width . 1.0) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 11807) (start . 11034))) "") (2 (((min-height . 4) (min-width . 20) (min-height-ignore . 4) (min-width-ignore . 12) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 160) (min-pixel-height-ignore . 68) (min-pixel-width-ignore . 96) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 1366) (pixel-height . 727) (total-width . 171) (total-height . 43) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 686) (pixel-height . 727) (total-width . 86) (total-height . 43) (normal-height . 1.0) (normal-width . 0.5) (buffer "note.org" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 21817) (start . 15048))) (leaf (last . t) (pixel-width . 680) (pixel-height . 727) (total-width . 85) (total-height . 43) (normal-height . 1.0) (normal-width . 0.5) (buffer "*info*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 547279) (start . 546924)))) "")))) nil nil nil) (def-persp "W" ((def-buffer "event.js" "/home/d/data/Chrome/Extentions/sis001/js/event.js" js2-mode) (def-buffer "TAGS" "/home/d/data/Chrome/Extentions/sis001/TAGS" tags-table-mode) (def-buffer "website.org" "/home/d/data/website/website.org" org-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1366) (pixel-height . 727) (total-width . 171) (total-height . 43) (normal-height . 1.0) (normal-width . 1.0) (buffer "website.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 296) (start . 1)))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1366) (pixel-height . 727) (total-width . 171) (total-height . 43) (normal-height . 1.0) (normal-width . 1.0) (buffer "website.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 296) (start . 1))) "")))) nil nil nil) (def-persp "spring" ((def-buffer "Spring Boot Reference Guide-2.1.6.RELEASE.org" "/home/d/data/spring/spring-boot/Spring Boot Reference Guide-2.1.6.RELEASE.org" org-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1366) (pixel-height . 727) (total-width . 171) (total-height . 43) (normal-height . 1.0) (normal-width . 1.0) (buffer "Spring Boot Reference Guide-2.1.6.RELEASE.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 2499) (start . 1)))) (def-params ((gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1366) (pixel-height . 727) (total-width . 171) (total-height . 43) (normal-height . 1.0) (normal-width . 1.0) (buffer "Spring Boot Reference Guide-2.1.6.RELEASE.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 2499) (start . 1))) "")) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-last-slot . 1))) nil nil nil))